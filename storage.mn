; Storage, a simple IndexedDB wrapper to store objects.

MNFW.Storage
	.db, .name

	.Storage: fn(dbName, onSuccess)
		var _t: this
			r: window.indexedDB.open(dbName, 1)
		name: dbName
		r
			onerror: fn(e)
				log(e)
			onsuccess: fn(e)
				_t.db: e.target.result
				_t.db.onerror: fn(ev)
					log(ev)
				onSuccess()
			onupgradeneeded: fn(e)
				e.target.result.createObjectStore(dbName, {keyPath: 'key'})

	.Get: fn(key, onSuccess)
		db.transaction(name).objectStore(name).get(key).onsuccess: fn(e)
			onSuccess(if e.target.result then e.target.result.value else undef)

	.Set: fn(key, val)
		var os: db.transaction([name], 'readwrite').objectStore(name)
		os.get(key).onsuccess: fn(e)
			if e.target.result
				os.put({key, value: key, val})
			else
				os.add({key, value: key, val})

	.Delete: fn(key)
		db.transaction([name], 'readwrite').objectStore(name)['delete'](key)
